@using System.Security.Claims
@inherits LayoutComponentBase
<HeadContent>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700"/>
    <link rel="stylesheet" href="plugins/datatables/datatables.bundle.css"/>
    <link rel="stylesheet" href="_content/SharedComponent/custom.css"/>
    <link rel="stylesheet" href="plugins/global/plugins.bundle.css"/>
    <link rel="stylesheet" href="css/style.bundle.css"/>
    <link rel="stylesheet" href="css/custom.css"/>
</HeadContent>
<div class="d-flex flex-column flex-root app-root" id="kt_app_root">
    <div class="app-page flex-column flex-column-fluid" id="kt_app_page">
        <NavMenu/>
        <div class="app-wrapper flex-column flex-row-fluid" id="kt_app_wrapper">
            <div class="app-main flex-column flex-row-fluid " id="kt_app_main">
                <div class="d-flex flex-column flex-column-fluid">
                    <div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6 ">
                        <div id="kt_app_toolbar_container" class="app-container container-xxl d-flex flex-stack">
                            <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3 ">
                                <h1 class="page-heading d-flex text-gray-900 fw-bold fs-3 flex-column justify-content-center my-0">
                                    LeUs Logistics
                                </h1>
                                <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                                    <li class="breadcrumb-item text-muted">
                                        <a href="/portal" class="text-muted text-hover-primary">
                                            Home
                                        </a>
                                    </li>
                                    <SectionOutlet SectionName="@NavConstants.TopLeft"></SectionOutlet>
                                </ul>
                            </div>
                            <div class="d-flex align-items-center gap-2 gap-lg-3">
                                <SectionOutlet SectionName="@NavConstants.TopRight"></SectionOutlet>
                            </div>
                        </div>
                    </div>
                    <div id="kt_app_content" class="app-content flex-column-fluid">
                        <div id="kt_app_content_container" class="app-container container-xxl">
                            <CascadingValue Value="ShareUserInfo" IsFixed="true">
                                @Body
                            </CascadingValue>
                        </div>
                    </div>
                </div>
                <div id="kt_app_footer" class="app-footer">
                    <div
                        class="app-container container-xxl d-flex flex-column flex-md-row flex-center flex-md-stack py-3 ">
                        <div class="text-gray-900 order-2 order-md-1">
                            <span class="text-muted fw-semibold me-1">2025&copy;</span>
                            <a href="/" class="text-gray-800 text-hover-primary"
                               onclick="location.href=this.href;return true;">LeUs Logistics</a>
                        </div>
                        <ul class="menu menu-gray-600 menu-hover-primary fw-semibold order-1">
                            <li class="menu-item">
                                <a href="/" target="_blank" class="menu-link px-2">About</a>
                            </li>
                            <li class="menu-item">
                                <a href="/" target="_blank" class="menu-link px-2">Terms & Conditions</a>
                            </li>
                            <li class="menu-item">
                                <a href="/" target="_blank" class="menu-link px-2">Privacy Policy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{

    [CascadingParameter] private Task<AuthenticationState>? AuthenticationState { get; set; }

    private UserInfo ShareUserInfo { get; set; } = new()
    {
        UserId = "",
        Email = ""
    };

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationState is not null)
        {
            var state = await AuthenticationState;
            var authenticatedUser = state.User;
            ShareUserInfo.UserId = $"{authenticatedUser.FindFirst(ClaimTypes.NameIdentifier)?.Value}";
            ShareUserInfo.Email = $"{authenticatedUser.FindFirst(ClaimTypes.Email)?.Value}";
            ShareUserInfo.FullName = $"{authenticatedUser.FindFirst(ClaimTypes.Name)?.Value}";
            ShareUserInfo.Phone = $"{authenticatedUser.FindFirst("Phone")?.Value}";
            ShareUserInfo.Airport = $"{authenticatedUser.FindFirst("Airport")?.Value ?? ""}";
            ShareUserInfo.Role = authenticatedUser.FindAll(ClaimTypes.Role).Select(s => s.Value).ToList() ?? [];
        }

        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await base.OnAfterRenderAsync(firstRender);
            if (firstRender)
            {
                await JsRuntime.InvokeVoidAsync("initTheme");
            }
        }
    }

}